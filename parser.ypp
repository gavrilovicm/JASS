%{
#include<iostream>
#include<cstdlib>
#include<string>
#include"userinfo.hpp"

extern int yylex();

void yyerror(std::string s){
	std::cerr << "Greska: " << s << std::endl;
	exit(EXIT_FAILURE);
}

std::string* username;
%}

%union{
	int int_type;
}

%left '+' '-'
%left '*' '/' '%'
%left UNMIN

%type<int_type> E
%token<int_type> num_tok

%%

Program
	: Niz_linija
	;

Niz_linija
	: Niz_linija wLinija
	| wLinija
	;

wLinija
	: Linija '\n'{
		std::cout << *username << ":->";
	}
	| '\n'{
		std::cout << *username << ":->";
	}
	;

Linija
	: E {std::cout << $1 << std::endl;}
	;

E
	: E '+' E {$$ = $1 + $3;}
	| E '-' E {$$ = $1 - $3;}
	| E '*' E {$$ = $1 * $3;}
	| E '/' E {$$ = $1 / $3;}
	| E '%' E {$$ = $1 % $3;}
	| '(' E ')' {
		$$ = $2;
	}
	| '-' E %prec UNMIN {$$ = -$2;}
	| num_tok {
		$$ = $1;
	}
	;
%%

int main(){
	
//	register struct passwd *pw;
//	register uid_t uid;
//
//	uid = geteuid();
//	pw = getpwuid(uid);
//
//	if (pw){
//		username = new std::string(pw->pw_name);
//	}else{
//		username = new std::string("anonimus");
//	}
//	std::cout << *username << ":->";

	username = getuserinfo();

	std::cout << *username << ":->";

	yyparse();
	delete username;
	exit(EXIT_SUCCESS);
}
